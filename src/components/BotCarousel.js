// src/components/BotCarousel.js
import { useState, useEffect } from 'react';

export default function BotCarousel({ slides }) {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [carouselKey, setCarouselKey] = useState(0);

  // –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ slides
  useEffect(() => {
    setCurrentSlide(0);
    setCarouselKey(prev => prev + 1); // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞
  }, [slides]);

  // –ó–∞—â–∏—Ç–∞ –æ—Ç –≤—ã—Ö–æ–¥–∞ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã –º–∞—Å—Å–∏–≤–∞
  useEffect(() => {
    if (slides && slides.length > 0 && currentSlide >= slides.length) {
      setCurrentSlide(0);
    }
  }, [slides, currentSlide]);

  const nextSlide = () => {
    if (!slides || slides.length === 0) return;
    setCurrentSlide((prev) => (prev + 1) % slides.length);
  };

  const prevSlide = () => {
    if (!slides || slides.length === 0) return;
    setCurrentSlide((prev) => (prev - 1 + slides.length) % slides.length);
  };

  const goToSlide = (index) => {
    if (!slides || slides.length === 0) return;
    setCurrentSlide(index);
  };

  // –ó–∞—â–∏—Ç–∞ –æ—Ç undefined
  if (!slides || slides.length === 0) {
    return (
      <div className="modern-carousel">
        <div className="carousel-header">
          <div className="slide-counter">
            <span className="current-slide">0</span>
            <span className="slide-divider">/</span>
            <span className="total-slides">0</span>
          </div>
        </div>
        <div className="carousel-content">
          <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</p>
        </div>
      </div>
    );
  }

  const currentSlideData = slides[currentSlide] || {};
  const hasImage = currentSlideData?.image && currentSlideData.image.trim() !== '';

  const handleImageError = (e) => {
    e.target.style.display = 'none';
    const placeholder = e.target.nextSibling;
    if (placeholder) placeholder.style.display = 'block';
  };

  const handleImageLoad = (e) => {
    e.target.style.display = 'block';
    const placeholder = e.target.nextSibling;
    if (placeholder) placeholder.style.display = 'none';
  };

  return (
    <div key={carouselKey} className="modern-carousel">
      <div className="carousel-header">
        <div className="slide-counter">
          <span className="current-slide">{currentSlide + 1}</span>
          <span className="slide-divider">/</span>
          <span className="total-slides">{slides.length}</span>
        </div>
      </div>

      <div className="carousel-content">
        <button 
          className="carousel-nav-btn prev"
          onClick={prevSlide}
          aria-label="Previous slide"
          disabled={slides.length <= 1}
        >
          <span>‚Äπ</span>
        </button>

        <div className="slide-container">
          <div className={`slide-content ${hasImage ? 'with-image' : 'text-only'}`}>
            <div className="slide-text">
              <h3>{currentSlideData?.title || "–ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}</h3>
              <p>{currentSlideData?.content || "–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}</p>
              {currentSlideData?.features && (
                <div className="slide-features">
                  {currentSlideData.features.map((feature, index) => (
                    <div key={index} className="feature-item">
                      <span className="feature-icon">‚úì</span>
                      <span>{feature}</span>
                    </div>
                  ))}
                </div>
              )}
            </div>
            
            {hasImage ? (
              <div className="slide-image">
                <img 
                  key={`${currentSlideData.image}-${currentSlide}`}
                  src={currentSlideData.image} 
                  alt={currentSlideData.title || "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"}
                  onError={handleImageError}
                  onLoad={handleImageLoad}
                />
                <div className="image-placeholder">
                  <span>üñºÔ∏è</span>
                  <p>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ</p>
                </div>
              </div>
            ) : (
              <div className="no-image-message">
                <span>üìã</span>
                <p>–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ</p>
              </div>
            )}
          </div>
        </div>

        <button 
          className="carousel-nav-btn next"
          onClick={nextSlide}
          aria-label="Next slide"
          disabled={slides.length <= 1}
        >
          <span>‚Ä∫</span>
        </button>
      </div>

      {slides.length > 1 && (
        <div className="carousel-footer">
          <div className="carousel-indicators">
            {slides.map((_, index) => (
              <button
                key={index}
                className={`indicator ${index === currentSlide ? 'active' : ''}`}
                onClick={() => goToSlide(index)}
                aria-label={`Go to slide ${index + 1}`}
              />
            ))}
          </div>
        </div>
      )}
    </div>
  );
}